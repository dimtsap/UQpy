# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python


variables:
  pythonVersion: 3.7
  srcDirectory: src
  
trigger:
  - master
  - Development
  - feature/*
  - bugfix/*
  - hotfix/*

pr:
  branches:
    include:
    - master
    - Development

pool:
  vmImage: "ubuntu-latest"
#  vmImage: "macOS-latest"

steps:
  - task: UsePythonVersion@0
    displayName: "Use Python $(pythonVersion)"
    inputs:
      versionSpec: "$(pythonVersion)"

  - task: gitversion/setup@0
    # condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: Setup GitVersion
    inputs:
      versionSpec: '5.x'

  - task: gitversion/execute@0
    # condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: Calculate GitVersion
    inputs:
      useConfigFile: true
      configFilePath: 'GitVersion.yml'

  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    
#  - bash: sudo chown -R $USER $CONDA
#    displayName: Take ownership of conda installation
#    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

  - bash: conda create --yes --quiet --name myEnvironment
    displayName: Create Anaconda environment
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

  - bash: |
      source activate myEnvironment
      conda install --yes --quiet --name myEnvironment python=$(pythonVersion) conda-build anaconda-client
    displayName: Install Anaconda packages
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

  - bash: |
      source activate myEnvironment
      conda build . recipe --variants "{'version': ['$(GitVersion.SemVer)']}"
    displayName: Build Noarch conda packages
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')



